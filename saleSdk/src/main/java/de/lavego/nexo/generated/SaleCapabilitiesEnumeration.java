//
// Diese Datei wurde mit der JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 generiert
// Siehe <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Änderungen an dieser Datei gehen bei einer Neukompilierung des Quellschemas verloren.
// Generiert: 2021.01.11 um 01:16:00 PM CET
//
package de.lavego.nexo.generated;
/**
 * <p>Java-Klasse für SaleCapabilitiesEnumeration.
 *
 * <p>Das folgende Schemafragment gibt den erwarteten Content an, der in dieser Klasse enthalten ist.
 * <p>
 * <pre>
 * &lt;simpleType name="SaleCapabilitiesEnumeration">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="CashierStatus"/>
 *     &lt;enumeration value="CashierError"/>
 *     &lt;enumeration value="CashierDisplay"/>
 *     &lt;enumeration value="POIReplication"/>
 *     &lt;enumeration value="CashierInput"/>
 *     &lt;enumeration value="CustomerAssistance"/>
 *     &lt;enumeration value="CustomerDisplay"/>
 *     &lt;enumeration value="CustomerError"/>
 *     &lt;enumeration value="CustomerInput"/>
 *     &lt;enumeration value="PrinterReceipt"/>
 *     &lt;enumeration value="PrinterDocument"/>
 *     &lt;enumeration value="PrinterVoucher"/>
 *     &lt;enumeration value="MagStripe"/>
 *     &lt;enumeration value="ICC"/>
 *     &lt;enumeration value="EMVContactless"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 *
 */
public enum SaleCapabilitiesEnumeration {
    /**
     * To display to the Cashier a new state on which the POI is
     * 						entering. For instance, during a payment, the POI could display to the
     * 						Cashier that POI request an
     *
     */
    CASHIER_STATUS("CashierStatus"),
    /**
     * To display to the Cashier information related to an error
     * 						situation occurring on the POI.
     *
     */
    
    CASHIER_ERROR("CashierError"),
    /**
     * Standard Cashier display interface (to ask question, or to
     * 						show information).
     *
     */
    
    CASHIER_DISPLAY("CashierDisplay"),
    /**
     * Information displayed on the Cardholder POI interface,
     * 						replicated on the Cashier interface.
     *
     */
    
    POI_REPLICATION("POIReplication"),
    /**
     * Any kind of keyboard allowing all or part of the commands of
     * 						the Input message request from the Sale System to the POI System
     * 						(InputCommand data element). The
     *
     */
    
    CASHIER_INPUT("CashierInput"),
    /**
     * Input of the Cardholder POI interface which can be entered by
     * 						the Cashier to assist the Customer.
     *
     */
    
    CUSTOMER_ASSISTANCE("CustomerAssistance"),
    /**
     * Standard Customer display interface used by the POI System to
     * 						ask question, or to show information to the Customer inside a Service
     * 						dialogue.
     *
     */
    
    CUSTOMER_DISPLAY("CustomerDisplay"),
    /**
     * To display to the Customer information is related to an error
     * 						situation occurring on the Sale Terminal during a Sale
     * 						transaction.
     *
     */
    
    CUSTOMER_ERROR("CustomerError"),
    /**
     * Any kind of keyboard allowing all or part of the commands of
     * 						the Input message request from the Sale System to the POI System
     * 						(InputCommand data element). The
     *
     */
    
    CUSTOMER_INPUT("CustomerInput"),
    /**
     * Printer for the Payment receipt.
     *
     */
    
    PRINTER_RECEIPT("PrinterReceipt"),
    /**
     * When the POI System wants to print specific document (check,
     * 						dynamic currency conversion ...).
     *
     */
    
    PRINTER_DOCUMENT("PrinterDocument"),
    /**
     * Coupons, voucher or special ticket generated by the POI and to
     * 						be printed.
     *
     */
    
    PRINTER_VOUCHER("PrinterVoucher"),
    /**
     * Magnetic stripe card reader
     *
     */
    
    MAG_STRIPE("MagStripe"),
    /**
     * Contact ICC card reader
     *
     */
    ICC("ICC"),
    /**
     * Contactless card reader with EMV
     * 						applications
     *
     */
    
    EMV_CONTACTLESS("EMVContactless");
    private final String value;
    SaleCapabilitiesEnumeration(String v) {
        value = v;
    }
    public String value() {
        return value;
    }
    public static SaleCapabilitiesEnumeration fromValue(String v) {
        for (SaleCapabilitiesEnumeration c: SaleCapabilitiesEnumeration.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }
}
